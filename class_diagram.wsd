/'
https://plantuml.com/class-diagram
https://www.visual-paradigm.com/guide/uml-unified-modeling-language/uml-class-diagram-tutorial/
'/

@startuml class_diagram
'skinparam classAttributeIconSize 0

class Game {
    -players: Player[]
    -boardFields: BoardField
    -cup: Cup
    -language: Language
    +Game(players: int, diceSides: int, language: String)
    +startGame(): void
    +switchTurn(): void
    +toString(): String
}

class Language {
    - String saveQuestion
    - String playerNameInput
    - String playerOptions
    - String wrongInput
    - String diceValues
    - String sum
    - String landedOn
    - String winner
    - String notSaved
    - String notLoaded
    + printSaveQuestion(): void
    + printPlayerNameInput(number: int): void
    + printPlayerOptions(name: String): void
    + printWrongInput(): void
    + printDiceValues(diceValues: int[]): void
    + printSum(sumValue: int): void
    + printLandedOn(boardPosition: int, boardName: String): void
    + printWinner(name: String): void
    + printNotSaved(): void
    + printNotLoaded(): void
    + getBoardNames(): String[]
}

class Player {
    -name: String
    +account: Account
    +Player(name: String, startBalance: int)
    +getName(): String
    +toString(): String
}

class BoardField {
    -name: String
    -points: int
    -description: String
    +getPoints(): int
    +getName(): String
    +getDescription(): String
}

class Cup {
    -dice: Dice[]
    -amountOfDice: int
    +Cup(amountOfDice: int, diceSides: int)
    +rollDice(): void
    +getDiceValues(): int[]
    +getDiceSum(): int
    +isDiceEqual(): boolean
    +toString(): String
}

class Dice {
    -sides: int
    -value: int
    +Dice(sides: int)
    +rollDice(): void
    +getValue(): int
}

class Account {
    -balance: int
    +Account(startBalance: int)
    +getBalance(): int
    +addBalance(): void
    +toString(): String
}

Game::players ..> Player
Game::boardFields ..> BoardField
Game::cup ..> Cup
Game::language ..> Language
Cup::dice ..> Dice
Player::account ..> Account
@enduml
